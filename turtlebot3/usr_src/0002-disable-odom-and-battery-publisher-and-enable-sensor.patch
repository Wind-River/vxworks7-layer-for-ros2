diff --git a/turtlebot3_node/src/odometry.cpp b/turtlebot3_node/src/odometry.cpp
index 898cb59..d926844 100644
--- a/turtlebot3_node/src/odometry.cpp
+++ b/turtlebot3_node/src/odometry.cpp
@@ -62,8 +62,9 @@ Odometry::Odometry(
     std::string("base_footprint"));
 
   auto qos = rclcpp::QoS(rclcpp::KeepLast(10));
+#ifndef __VXWORKS__
   odom_pub_ = nh_->create_publisher<nav_msgs::msg::Odometry>("odom", qos);
-
+#endif
   tf_broadcaster_ = std::make_unique<tf2_ros::TransformBroadcaster>(nh_);
 
   if (use_imu_)
diff --git a/turtlebot3_node/src/turtlebot3.cpp b/turtlebot3_node/src/turtlebot3.cpp
index f714819..a311dac 100644
--- a/turtlebot3_node/src/turtlebot3.cpp
+++ b/turtlebot3_node/src/turtlebot3.cpp
@@ -33,6 +33,7 @@ TurtleBot3::TurtleBot3(const std::string & usb_port)
 
   add_motors();
   add_wheels();
+
   add_sensors();
   add_devices();
 
@@ -163,7 +164,7 @@ void TurtleBot3::add_sensors()
   bool is_connected_ir = this->get_parameter("sensors.ir").as_bool();
 
   bool is_connected_sonar = this->get_parameter("sensors.sonar").as_bool();
-
+#ifndef __VXWORKS__
   sensors_.push_back(new sensors::BatteryState(
     node_handle_,
     "battery_state"));
@@ -173,7 +174,7 @@ void TurtleBot3::add_sensors()
     "imu",
     "magnetic_field",
     "imu_link"));
-
+#endif
   sensors_.push_back(new sensors::SensorState(
     node_handle_,
     "sensor_state",
