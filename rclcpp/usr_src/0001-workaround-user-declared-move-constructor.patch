From c9e3e2f1363f2f4be5ffcd34a7a31f1dc8ff2b1e Mon Sep 17 00:00:00 2001
From: Andrei Kholodnyi <andrei.kholodnyi@windriver.com>
Date: Thu, 16 Nov 2023 22:57:01 +0100
Subject: [PATCH] workaround user-declared move constructor

---
 rclcpp_action/src/client.cpp | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

diff --git a/rclcpp_action/src/client.cpp b/rclcpp_action/src/client.cpp
index 2d5018d5..ab83fc2f 100644
--- a/rclcpp_action/src/client.cpp
+++ b/rclcpp_action/src/client.cpp
@@ -318,18 +318,26 @@ ClientBase::handle_result_response(
   const rmw_request_id_t & response_header,
   std::shared_ptr<void> response)
 {
-  std::map<int64_t, ResponseCallback>::node_type pending_result_response;
+  std::map<int64_t, ResponseCallback>::iterator it;
   {
     std::lock_guard<std::mutex> guard(pimpl_->result_requests_mutex);
     const int64_t & sequence_number = response_header.sequence_number;
-    if (pimpl_->pending_result_responses.count(sequence_number) == 0) {
+    it = pimpl_->pending_result_responses.find(sequence_number);
+    if (it == pimpl_->pending_result_responses.end()) {
       RCLCPP_ERROR(pimpl_->logger, "unknown result response, ignoring...");
       return;
     }
-    pending_result_response =
-      pimpl_->pending_result_responses.extract(sequence_number);
   }
-  auto & response_callback = pending_result_response.mapped();
+
+  std::map<int64_t, ResponseCallback>::node_type pending_result_response_node =
+    std::move(pimpl_->pending_result_responses.extract(it));
+
+  {
+    std::lock_guard<std::mutex> guard(pimpl_->result_requests_mutex);
+    pimpl_->pending_result_responses.insert(std::move(pending_result_response_node));
+  }
+
+  auto & response_callback = it->second;
   response_callback(response);
 }
 
-- 
2.34.1

