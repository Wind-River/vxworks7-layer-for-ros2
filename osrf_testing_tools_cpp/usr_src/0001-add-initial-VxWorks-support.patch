From 15a151684dab3f2a735730950ac8f452d57f81fb Mon Sep 17 00:00:00 2001
From: Andrei Kholodnyi <andrei.kholodnyi@gmail.com>
Date: Fri, 29 Jan 2021 00:01:20 +0100
Subject: [PATCH] add initial VxWorks support

---
 .../count_function_occurrences_in_backtrace.hpp        |  1 +
 .../src/test_runner/execute_process.hpp                | 10 ++++++++++
 2 files changed, 11 insertions(+)

diff --git a/osrf_testing_tools_cpp/src/memory_tools/count_function_occurrences_in_backtrace.hpp b/osrf_testing_tools_cpp/src/memory_tools/count_function_occurrences_in_backtrace.hpp
index c9c16ea..08d6f83 100644
--- a/osrf_testing_tools_cpp/src/memory_tools/count_function_occurrences_in_backtrace.hpp
+++ b/osrf_testing_tools_cpp/src/memory_tools/count_function_occurrences_in_backtrace.hpp
@@ -21,6 +21,7 @@
 
 // Include nothing for now.
 
+#elif defined(__VXWORKS__)
 #else  // defined(_WIN32)
 
 #include <cstdio>
diff --git a/osrf_testing_tools_cpp/src/test_runner/execute_process.hpp b/osrf_testing_tools_cpp/src/test_runner/execute_process.hpp
index 8bb4d9f..f8c7fbd 100644
--- a/osrf_testing_tools_cpp/src/test_runner/execute_process.hpp
+++ b/osrf_testing_tools_cpp/src/test_runner/execute_process.hpp
@@ -37,6 +37,8 @@ namespace impl
 
 #if defined(WIN32)
 int execute_process_win32(const std::vector<std::string> & commands);
+#elif defined(__VXWORKS__)
+int execute_process_vxworks(const std::vector<std::string> & commands);
 #else
 int execute_process_unix(const std::vector<std::string> & commands);
 #endif
@@ -49,6 +51,8 @@ execute_process(const std::vector<std::string> & commands)
 {
 #if defined(WIN32)
   return impl::execute_process_win32(commands);
+#elif defined(__VXWORKS__)
+  return impl::execute_process_vxworks(commands);
 #else
   return impl::execute_process_unix(commands);
 #endif
@@ -92,6 +96,12 @@ int impl::execute_process_win32(const std::vector<std::string> & commands)
   return exit_code;
 }
 
+#elif defined(__VXWORKS__)
+int impl::execute_process_vxworks(const std::vector<std::string> & commands)
+{
+  int exit_code = 0;
+  return exit_code;
+}
 #else
 
 int impl::execute_process_unix(const std::vector<std::string> & commands)
-- 
2.25.1

