From 609720827635d9f2851135039e097792f9c87e48 Mon Sep 17 00:00:00 2001
From: Andrei Kholodnyi <andrei.kholodnyi@gmail.com>
Date: Thu, 9 Apr 2020 22:32:20 +0200
Subject: [PATCH 1/2] rmw_implementation

---
 rmw_implementation/CMakeLists.txt    |  7 +++---
 rmw_implementation/src/functions.cpp | 33 ++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+), 4 deletions(-)

diff --git a/rmw_implementation/CMakeLists.txt b/rmw_implementation/CMakeLists.txt
index 2258edf..a86aac3 100644
--- a/rmw_implementation/CMakeLists.txt
+++ b/rmw_implementation/CMakeLists.txt
@@ -56,15 +56,14 @@ else()
   message(STATUS "Runtime selection of RMW enabled")
 
   # provides FindPoco.cmake and Poco on platforms without it
-  find_package(poco_vendor REQUIRED)
-  find_package(Poco REQUIRED COMPONENTS Foundation)
+  #  find_package(poco_vendor REQUIRED)
+  #  find_package(Poco REQUIRED COMPONENTS Foundation)
   find_package(rmw REQUIRED)
 
-  link_directories(${Poco_LIBRARY_DIR})
+  #  link_directories(${Poco_LIBRARY_DIR})
   add_library(${PROJECT_NAME} SHARED
     src/functions.cpp)
   ament_target_dependencies(${PROJECT_NAME}
-    "Poco"
     "rmw")
   target_compile_definitions(${PROJECT_NAME}
     PUBLIC "DEFAULT_RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}")
diff --git a/rmw_implementation/src/functions.cpp b/rmw_implementation/src/functions.cpp
index dd62fe5..cddedef 100644
--- a/rmw_implementation/src/functions.cpp
+++ b/rmw_implementation/src/functions.cpp
@@ -26,7 +26,11 @@
 #include "rcutils/format_string.h"
 #include "rcutils/types/string_array.h"
 
+#ifdef RMW_IMPLEWMENTATION_USE_POCO
 #include "Poco/SharedLibrary.h"
+#else
+#include "SharedLibrary.h"
+#endif
 
 #include "rmw/error_handling.h"
 #include "rmw/event.h"
@@ -93,7 +97,11 @@ std::string find_library_path(const std::string & library_name)
   filename_extension = ".dylib";
 #else
   env_var = "LD_LIBRARY_PATH";
+#ifdef __VXWORKS__
+  separator = ';';
+#else
   separator = ':';
+#endif
   filename_prefix = "lib";
   filename_extension = ".so";
 #endif
@@ -115,10 +123,19 @@ std::string find_library_path(const std::string & library_name)
 #define STRINGIFY_(s) #s
 #define STRINGIFY(s) STRINGIFY_(s)
 
+#ifdef RMW_IMPLEWMENTATION_USE_POCO
 Poco::SharedLibrary *
+#else
+shared_library::SharedLibrary *
+#endif
 get_library()
 {
+#ifdef RMW_IMPLEWMENTATION_USE_POCO
   static Poco::SharedLibrary * lib = nullptr;
+#else
+  static shared_library::SharedLibrary * lib = nullptr;
+#endif
+
   if (!lib) {
     std::string env_var = get_env_var("RMW_IMPLEMENTATION");
     if (env_var.empty()) {
@@ -131,10 +148,18 @@ get_library()
       return nullptr;
     }
     try {
+#ifdef RMW_IMPLEWMENTATION_USE_POCO
       lib = new Poco::SharedLibrary(library_path);
     } catch (Poco::LibraryLoadException & e) {
+
       RMW_SET_ERROR_MSG(("failed to load shared library of rmw implementation. Exception: " +
         e.displayText()).c_str());
+#else
+      lib = new shared_library::SharedLibrary(library_path);
+    } catch (shared_library::LibraryLoadException & e) {
+
+      RMW_SET_ERROR_MSG("failed to load shared library of rmw implementation. Exception: ");
+#endif
       return nullptr;
     } catch (...) {
       RMW_SET_ERROR_MSG("failed to load shared library of rmw implementation");
@@ -149,7 +174,11 @@ get_library()
 void *
 get_symbol(const char * symbol_name)
 {
+#ifdef RMW_IMPLEWMENTATION_USE_POCO
   Poco::SharedLibrary * lib = get_library();
+#else
+  shared_library::SharedLibrary * lib = get_library();
+#endif
   if (!lib) {
     // error message set by get_library()
     return nullptr;
@@ -158,7 +187,11 @@ get_symbol(const char * symbol_name)
     rcutils_allocator_t allocator = rcutils_get_default_allocator();
     char * msg = rcutils_format_string(
       allocator,
+#ifdef RMW_IMPLEWMENTATION_USE_POCO
       "failed to resolve symbol '%s' in shared library '%s'", symbol_name, lib->getPath().c_str());
+#else
+      "failed to resolve symbol '%s' in shared library ' '", symbol_name);
+#endif
     if (msg) {
       RMW_SET_ERROR_MSG(msg);
       allocator.deallocate(msg, allocator.state);
-- 
2.17.1

